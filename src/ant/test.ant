<?xml version="1.0"?>
<project name="test" basedir=".">

	<target name="test.psylla"
		description="Perform Psylla unit tests"
		depends="compile.java,copy.resources"
		>
		<mkdir dir="${src.test.data}/DIRECTORY-EMPTY"/>
		<mkdir dir="${src.test.data}/DIRECTORY-NONEMPTY/DIR-1"/>
		<mkdir dir="${src.test.data}/DIRECTORY-NONEMPTY/DIR-2/DIR-3"/>
		<taskdef
			name="psyllaunit"
			classname="coneforest.psylla.tools.ant.PsyllaUnit"
			>
			<classpath>
				<path refid="modulepath.main"/>
				<path refid="classpath.main"/>
			</classpath>
		</taskdef>
		<psyllaunit haltonfailure="yes">
			<arg value="-LC"/>
			<arg value="-I${src.main.psylla}"/>
			<classpath>
				<path refid="modulepath.main"/>
				<path refid="classpath.main"/>
			</classpath>
			<formatter type="plain" usefile="false"/>
			<test name="src/test/psylla"/>
		</psyllaunit>
	</target>

	<target name="test.anttask"
		description="Perform ant-task tests"
		depends="compile.java,copy.resources"
		>
		<taskdef
			name="psylla"
			classname="coneforest.psylla.tools.ant.Psylla"
			>
			<classpath>
				<path refid="modulepath.main"/>
				<path refid="classpath.main"/>
			</classpath>
		</taskdef>
		<psylla eval="1 1 99 { ? } for"/>
		<psylla eval="1 atan 4 mul ?"/>
	</target>

	<target name="test.jsr223"
		description="Perform JSR 223 tests"
		depends="compile.java,copy.resources"
		>
		<script
			manager="javax"
			language="psylla"
			>
			<classpath refid="classpath.main"/>
			<classpath refid="modulepath.main"/>
			<![CDATA[1 1 99 { ? } for]]>
		</script>
		<script
			manager="javax"
			language="psylla"
			classpathref="classpath.main"
			>
			<classpath refid="classpath.main"/>
			<classpath refid="modulepath.main"/>
			<![CDATA[1 atan 4 mul ?]]>
		</script>
	</target>

	<target name="test.toolprovider"
		description="Perform ToolProvider test"
		depends="compile.java,copy.resources"
		>
		<java
			module="${project.moduleprefix}.examples/coneforest.psylla.examples.PsyllaToolProviderExample"
			clonevm="false"
			fork="true"
			>
			<modulepath refid="modulepath.main"/>
			<arg value="--add-reads=${project.moduleprefix}=ALL-UNNAMED"/>
			<arg value="--add-reads=${project.moduleprefix}.tools=ALL-UNNAMED"/>
		</java>
	</target>

	<target name="test.obs"
		description="Perform OBS build tests"
		>
		<antcall target="obs.build" inheritAll="false">
			<param name="obs.build.distro" value="15.5"/>
		</antcall>
		<antcall target="obs.build" inheritAll="false">
			<param name="obs.build.distro" value="openSUSE_Tumbleweed"/>
		</antcall>
		<antcall target="obs.build" inheritAll="false">
			<param name="obs.build.distro" value="Debian_11"/>
		</antcall>
		<!--antcall target="obs.build" inheritAll="false">
			<param name="obs.build.distro" value="xUbuntu_23.04"/>
		</antcall-->
	</target>

</project>
