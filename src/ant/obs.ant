<?xml version="1.0" encoding="UTF-8"?>
<project name="obs" basedir=".">

	<property name="obs.package.name" value="${project.name}"/>
	<property name="obs.package.version" value="${project.version}"/>
	<property name="obs.package.summary" value="${project.summary}"/>
	<property name="obs.package.description" value="${project.description}"/>
	<property name="obs.build.distro" value="openSUSE_Leap_15.1"/>
	<property name="obs.build.arch" value="x86_64"/>
	<property name="obs.build.project" value="home:concyclic:java"/>
	<property name="src.obs" location="${src}/obs"/>
	<condition property="obs.build.desc" value="${obs.package.name}.dsc" else="${obs.package.name}.spec">
		<or>
			<contains string="${obs.build.distro}" substring="Debian"/>
			<contains string="${obs.build.distro}" substring="Ubuntu"/>
		</or>
	</condition>

	<available
		property="obs.dir.available"
		file="${target.obs}/.osc"
		/>

	<target name="obs.checkout"
		description="Checkout OBS package"
		unless="obs.dir.available"
		>
		<mkdir dir="${target.obs}"/>
		<exec executable="osc">
			<arg value="checkout"/>
			<arg value="-o"/>
			<arg value="${target.obs}"/>
			<arg value="${obs.build.project}"/>
			<arg value="${obs.package.name}"/>
		</exec>
	</target>

	<target name="obs.copy.spec"
		description="Copy sources and specs to OBS working directory"
		depends="dist.tar"
		>
		<mkdir dir="${target.obs}"/>
		<copy todir="${target.obs}" overwrite="yes">
			<fileset dir="${target}" includes="${project.name}-${project.version}.tar.xz"/>
			<fileset dir="${src.obs}" includes="_service"/>
		</copy>
		<copy todir="${target.obs}" filtering="true" overwrite="yes">
			<fileset dir="${src.obs}" includes="${project.name}.*"/>
			<filterset>
				<propertyset>
					<propertyref name="obs.package.name"/>
					<propertyref name="obs.package.version"/>
					<propertyref name="obs.package.summary"/>
					<propertyref name="obs.package.description"/>
				</propertyset>
			</filterset>
		</copy>
		<copy todir="${target.obs}" filtering="true" overwrite="yes">
			<fileset dir="${src.obs}/debian" includes="*"/>
			<mapper type="glob" from="*" to="debian.*"/>
			<filterset>
				<propertyset>
					<propertyref name="obs.package.name"/>
					<propertyref name="obs.package.version"/>
					<propertyref name="obs.package.summary"/>
					<propertyref name="obs.package.description"/>
				</propertyset>
			</filterset>
		</copy>
	</target>

	<target name="obs.add.spec"
		description="Adds sources to OBS package"
		depends="obs.checkout,obs.copy.spec"
		>
		<!--delete>
			<fileset dir="${target.obs}" includes="**/*"/>
		</delete-->
		<exec executable="osc" dir="${target.obs}">
			<arg value="addremove"/>
			<arg value="${project.name}-${project.version}.tar.xz"/>
			<arg value="${obs.build.desc}"/>
		</exec>
	</target>

	<target name="obs.commit"
		description="Commit changes to OBS package"
		depends="obs.add.spec"
		>
		<mkdir dir="${target.obs}"/>
		<exec outputproperty="git.last.message" executable="git">
			<arg value="log"/>
			<arg value="--pretty=%s"/>
			<arg value="-1"/>
		</exec>
		<exec executable="osc" dir="${target.obs}">
			<arg value="checkin"/>
			<arg value="-v"/>
			<arg value="-m"/>
			<arg value="${git.last.message}"/>
		</exec>
	</target>

	<target name="obs.build"
		description="Build package locally"
		depends="obs.copy.spec"
		>
		<exec executable="osc" dir="${target.obs}">
			<arg value="build"/>
			<arg value="--no-verify"/>
			<arg value="--trust-all-projects"/>
			<arg value="--alternative-project"/>
			<arg value="${obs.build.project}"/>
			<arg value="${obs.build.distro}"/>
			<arg value="${obs.build.arch}"/>
			<arg value="${obs.build.desc}"/>
		</exec>
	</target>

</project>
