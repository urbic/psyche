<?xml version="1.0" encoding="UTF-8"?>
<section xml:id="PsiReference_Language_Stacks">
<title>Стеки</title>

<para>
Интерпретатор Ψ поддерживает несколько стеков, предназначенных для хранения
данных во время исполнения программы или для представления состояния её
исполнения. Три из них являются ключевыми — <firstterm>стек
операндов</firstterm><indexterm><primary>стек</primary><secondary>операндов</secondary></indexterm>,
<firstterm>стек
словарей</firstterm><indexterm><primary>стек</primary><secondary>словарей</secondary></indexterm>
и <firstterm>стек
исполнения</firstterm><indexterm><primary>стек</primary><secondary>исполнения</secondary></indexterm>.
</para>

<para>
Каждый из стеков устроен по принципу <acronym>LIFO</acronym> — <foreignphrase
xml:lang="en">Last In—First Out</foreignphrase> (последний пришёл — первый ушёл).
</para>

<section xml:id="PsiReference_Language_Stacks_OperandStack">
<title>Стек операндов</title>

<para>
Исполнение литеральных объектов всегда приводит к их добавлению в стек
операндов. Если оператор нуждается в данных для обработки, он снимает
необходимое количество объектов со стека операндов. Объекты, созданные
в результате работы оператора, добавлются в этот стек. Так действует
большинство операторов языка. Таким образом, свободно манипулировать стеком
операндов может как интерпретатор, так и любой из операторов.
</para>

</section>

<section xml:id="PsiReference_Language_Stacks_DictionaryStack">
<title>Стек словарей</title>

<para>
Стек словарей способен хранить только словари. Текущее состояние стека словарей
служит контекстом для поиска объектов по именам. Необходимость в таком поиске
возникает каждый раз, когда интерпретатор встречает команду. Имеется
несколько операторов, предназначенных для управления стеком словарей.
</para>

</section>

<section xml:id="PsiReference_Language_Stacks_ExecutionStack">
<title>Стек исполнения</title>

<para>
Стек исполнения отражает фазу исполнения процедуры. При исполнении процедуры её
элементы загружаются на стек исполнения в обратном порядке, так что самый
первый элемент оказывается на вершине стека. Затем интерпретатор по очереди
снимает объекты из стека исполнения и исполняет их до тех пор, пока уровень
стека не сравняется с первоначальным (тем, что был к началу исполнения
процедуры).
</para>

<para>
Стеком исполнения может управлять интерпретатор. В языке есть лишь несколько
операторов, управляющих напрямую стеком исполнения. Это управляющие операторы,
реализующие циклы.
</para>

</section>

<section xml:id="PsiReference_Language_Stacks_Auxiliary">
<title>Служебные стеки</title>

<para>
Помимо трёх основных стеков, в интерпретатор встроены и другие, служебные. Это
<firstterm>стек контекстов
выхода</firstterm><indexterm><primary>стек</primary><secondary>контекстов
выхода</secondary></indexterm> и <firstterm>стек контекстов
остановки</firstterm><indexterm><primary>стек</primary><secondary>контекстов
остановки</secondary></indexterm>. Используют служебные стеки лишь несколько
управляющих операторов.
</para>

</section>

</section>
