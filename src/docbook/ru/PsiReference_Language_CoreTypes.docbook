<?xml version="1.0" encoding="UTF-8"?>
<section xml:id="PsiReference_Language_CoreTypes">
<title>Основные типы</title>

<para>
Все данные в языке Ψ существуют в форме
<firstterm>объектов</firstterm><indexterm><primary>объект</primary></indexterm>.
Большинство объектов создаётся и обрабатывается операторами Ψ. Некоторые типы
объектов также создаются парсером и исполняются интерпретатором.
</para>

<para>
Каждый объект принадлежит некоторому
<firstterm>типу</firstterm><indexterm><primary>тип</primary></indexterm>. Тип
объекта влияет на то, как тот будет обрабатываться операторами. Типы
подразделяются
на <firstterm>простые</firstterm><indexterm><primary>тип</primary><secondary>простой</secondary></indexterm>
и
<firstterm>сложные</firstterm><indexterm><primary>тип</primary><secondary>сложный</secondary></indexterm>.
</para>

<para>
Объекты простых типов не могут быть изменены, они лишь создаются в результате
вычислений. Например, оператор <xref xrefstyle="template:%t"
linkend="PsiReference_Operators_Details_neg"/> не изменяет знак у самого числа,
а создаёт новый числовой объект, отличающийся знаком от исходного.
</para>

<para>
Объекты сложных типов могут изменять своё состояние. К примеру, оператор <xref
xrefstyle="template:%t" linkend="PsiReference_Operators_Details_put"/> заменяет
элемент массива, имеющий заданный индекс.
</para>

<para>
Ниже приводится сводка простых и сложных типов, составляющих ядро языка Ψ.
Расширения языка могут вводить новые типы объектов.
</para>

<informaltable frame="none" pgwide="1">
<tgroup cols="2" colsep="0">
<tbody valign="top">
<row>
<entry>
<itemizedlist>
<title>Простые типы</title>
<listitem><xref linkend="PsiReference_Types_Details_biginteger" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_boolean" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_command" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_complex" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_integer" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_mark" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_name" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_null" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_operator" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_real" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_regexp" xrefstyle="template:%t"/></listitem>
</itemizedlist>
</entry>
<entry>
<itemizedlist>
<title>Сложные типы</title>
<listitem><xref linkend="PsiReference_Types_Details_array" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_bitarray" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_bitset" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_dict" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_input" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_lock" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_matcher" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_output" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_proc" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_random" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_reader" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_set" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_string" xrefstyle="template:%t"/></listitem>
<listitem><xref linkend="PsiReference_Types_Details_writer" xrefstyle="template:%t"/></listitem>
</itemizedlist>
</entry>
</row>
</tbody>
</tgroup>
</informaltable>

<section xml:id="PsiReference_Language_CoreTypes_Operators">
<title>Операторы</title>

<para>
<firstterm>Оператор</firstterm><indexterm><primary>оператор</primary></indexterm>
в языке Ψ представляет код, манипулирующий интерпретатором. Объекты-операторы
имеют тип <xref linkend="PsiReference_Types_Details_operator"
xrefstyle="template:%t"/>. Все основные операторы изначально размещены
в системном словаре и доступны по их именам. Операторы не могут быть созданы
или изменены Ψ-программой.
</para>

</section>

<section xml:id="PsiReference_Language_CoreTypes_Numbers">
<title>Числа</title>

<para>
В языке Ψ предусмотрены четыре числовых типа: целый (<xref
linkend="PsiReference_Types_Details_integer" xrefstyle="template:%t"/>),
вещественный (<xref linkend="PsiReference_Types_Details_real"
xrefstyle="template:%t"/>), комплексный (<xref
linkend="PsiReference_Types_Details_complex" xrefstyle="template:%t"/>) и
большой целый (<xref linkend="PsiReference_Types_Details_biginteger"
xrefstyle="template:%t"/>).
</para>

<para>
Объект целого типа представляет математическое целое число из диапазона от

<math xmlns="&nsMathML;">
	<mo>−</mo>
	<msup>
		<mn>2</mn>
		<mn>63</mn>
	</msup>
</math>

до

<math xmlns="&nsMathML;">
	<msup>
		<mn>2</mn>
		<mn>63</mn>
	</msup>
	<mo>−</mo>
	<mn>1</mn>
</math>

включительно.
</para>

<para>
Объект вещественного типа приближает математическое вещественное число
из существенно большего диапазона, однако с ограниченной точностью,
реализованное как число с плавающей точкой.
</para>

<para>
Объект комплексного типа представляет математическое комплексное число. Он
реализован как пара вещественных чисел — вещественная и мнимая части числа.
</para>

<para>
Объект большого целого типа типа представляет математическое целое число
произвольной величины.
</para>

<para>
Большинство математических операторов Ψ могут применяться к операндам всех
четырёх типов, производя при необходимости нужное преобразование типа.
</para>

</section>

<section xml:id="PsiReference_Language_CoreTypes_Booleans">
<title>Булевские значения</title>

<para>
Объекты булевского типа (<xref linkend="PsiReference_Types_Details_boolean"
xrefstyle="template:%t"/>) представляют логические значения «ложь» и «правда».
Их главное предназначение — служить операндами в условных управляющих
операторах <xref linkend="PsiReference_Operators_Details_if"
xrefstyle="template:%t"/> и <xref
linkend="PsiReference_Operators_Details_ifelse" xrefstyle="template:%t"/>. Оба
булевских объекта присутствуют в системном словаре под именами <xref
linkend="PsiReference_Operators_Details_false" xrefstyle="template:%t"/> и
<xref linkend="PsiReference_Operators_Details_true" xrefstyle="template:%t"/>.
</para>

</section>

<section xml:id="PsiReference_Language_CoreTypes_Marks">
<title>Метки</title>

<para>
<firstterm>Метка</firstterm><indexterm><primary>метка</primary></indexterm> —
единственный объект типа <xref linkend="PsiReference_Types_Details_mark"
xrefstyle="template:%t"/> — служит для обозначения позиции на стеке операндов.
Метка доступна в системном словаре по именам <xref
linkend="PsiReference_Operators_Details_mark" xrefstyle="template:%t"/> (<xref
linkend="PsiReference_Operators_Details_[" xrefstyle="template:%t"/>, <xref
linkend="PsiReference_Operators_Details_&lt;" xrefstyle="template:%t"/>, <xref
linkend="PsiReference_Operators_Details_(" xrefstyle="template:%t"/>).
В основном метки служат операндами для операторов <xref
linkend="PsiReference_Operators_Details_arraytomark" xrefstyle="template:%t"/>
(<xref linkend="PsiReference_Operators_Details_]" xrefstyle="template:%t"/>),
<xref linkend="PsiReference_Operators_Details_dicttomark"
xrefstyle="template:%t"/> (<xref linkend="PsiReference_Operators_Details_&gt;"
xrefstyle="template:%t"/>), <xref
linkend="PsiReference_Operators_Details_settomark" xrefstyle="template:%t"/>
(<xref linkend="PsiReference_Operators_Details_)" xrefstyle="template:%t"/>),
<xref linkend="PsiReference_Operators_Details_counttomark"
xrefstyle="template:%t"/>, <xref
linkend="PsiReference_Operators_Details_cleartomark" xrefstyle="template:%t"/>.
</para>

</section>

<section xml:id="PsiReference_Language_CoreTypes_Nulls">
<title>Пустой объект</title>

<para>
Особый тип <xref linkend="PsiReference_Types_Details_null"
xrefstyle="template:%t"/> содержит единственный объект. Этот объект служит
заполнителем в контейнерах, чьи элементы ещё не инициализированы. Главным
образом пустой объект появляется в массивах при увеличении их размера. Пустой
объект доступен в системном словаре по имени <xref
linkend="PsiReference_Operators_Details_null" xrefstyle="template:%t"/>. Он не
может быть операндом для большинства операторов.
</para>

</section>

<section xml:id="PsiReference_Language_CoreTypes_Names">
<title>Имена</title>

<para>
<firstterm>Имена</firstterm><indexterm><primary>имя</primary></indexterm>
представляют неизменяемые строки. Имена главным образом используются как ключи
в словарях, по которым извлекаются соответствующие значения. С каждым
оператором языка Ψ ассоциировано имя в системном словаре.
</para>

</section>

<section xml:id="PsiReference_Language_CoreTypes_Commands">
<title>Команды</title>

<para>
<firstterm>Команды</firstterm><indexterm><primary>команда</primary></indexterm>
(<firstterm>исполняемые
имена</firstterm><indexterm><primary>имя</primary><secondary>исполняемое</secondary></indexterm>)
отличаются от имён семантикой исполнения. Исполнение команды заключается
в поиске объекта, ассоциированого с именем команды, в стеке словарей, и
последующем исполнении найденного объекта.
</para>

</section>

<section xml:id="PsiReference_Language_CoreTypes_Arrays">
<title>Массивы</title>

<para>
<firstterm>Массив</firstterm><indexterm><primary>массив</primary></indexterm> —
это контейнер для объектов, пронумерованных целыми неотрицательными числами
(<firstterm>индексами</firstterm><indexterm><primary>индекс</primary><secondary>массива</secondary></indexterm>).
Массивы в языке Ψ являются
<firstterm>неоднородными</firstterm><indexterm><primary>массив</primary><secondary>неоднородный</secondary></indexterm>,
то есть элементы массива могут быть объектами любого типа. В частности, массивы
могут содержать контейнеры (массивы, словари, множества), что позволяет
конструировать многомерные структуры данных любой сложности.
</para>

<para>
Массивы индексируются начиная с нуля. При доступе к элементам массива
осуществляется проверка границ индекса. В случае выхода индекса за пределы
границ возбуждается ошибка <xref
linkend="PsiReference_Errors_Details_rangecheck" xrefstyle="template:%t"/>.
</para>

<para>
Длина массива может изменяться за счёт добавления или удаления элементов.
</para>

</section>

<section xml:id="PsiReference_Language_CoreTypes_Procedures">
<title>Процедуры</title>

<para>
<firstterm>Процедура</firstterm><indexterm><primary>процедура</primary></indexterm>
(<firstterm>исполняемые
массивы</firstterm><indexterm><primary>массив</primary><secondary>исполняемый</secondary></indexterm>)
отличается от массива семантикой исполнения. Исполнение процедуры заключается
в поочерёдном исполнении всех её элементов.
</para>

</section>

<section xml:id="PsiReference_Language_CoreTypes_Strings">
<title>Строки</title>

<para>
<firstterm>Строка</firstterm><indexterm><primary>строка</primary></indexterm>
концептуально устроена как массив, элементами которого служат целые числа
из диапазона от <math xmlns="&nsMathML;"><mn>0</mn></math> до <math
xmlns="&nsMathML;"><mn>65535</mn></math> — <firstterm>кодовые
единицы</firstterm><indexterm><primary>кодовая единица</primary></indexterm>.
</para>

<para>
Строки используются для хранения текста. Каждый символ текста представлен одной
или двумя кодовыми единицами в соответствии с кодировкой
<firstterm><acronym>UTF-16</acronym></firstterm><indexterm><primary>UTF-16</primary></indexterm>.
Одна кодовая единица кодирует символы из <firstterm>основной многоязычной
плоскости</firstterm><indexterm><primary>основная многоязычная
плоскость</primary><see><acronym>BMP</acronym></see></indexterm>
(<acronym>BMP</acronym><indexterm><primary><acronym>BMP</acronym></primary></indexterm>).
Остальные символы Unicode кодируются так называемыми <firstterm>суррогатными
парами</firstterm><indexterm><primary>суррогатная пара</primary></indexterm>.
</para>

</section>

<section xml:id="PsiReference_Language_CoreTypes_Dictionaries">
<title>Словари</title>

<para>
<firstterm>Словарь</firstterm><indexterm><primary>словарь</primary></indexterm> представляет
собой контейнер для объектов, проиндексированных именами. Такие структуры
называют также <firstterm>ассоциативными
массивами</firstterm><indexterm><primary>массив</primary><secondary>ассоциативный</secondary></indexterm>.
</para>

<para>
Словари интенсивно используются интерпретатором для ассоциации объектов
(по большей части операторов и процедур) с именами. Каждый раз, когда парсер
обнаруживает команду, интерпретатор осуществляет поиск объекта по имени команды
в стеке словарей, после чего исполняет найденный объект.
</para>

</section>

<section xml:id="PsiReference_Language_CoreTypes_RegExps">
<title>Регулярные выражения</title>

<para>
<firstterm>Регулярное выражение</firstterm><indexterm><primary>регулярное
выражение</primary></indexterm> представляет шаблон поиска в строке.
</para>

<section xml:id="PsiReference_Language_CoreTypes_RegExps_Constructs">
<title>Конструкции в регулярных выражениях</title>

<section xml:id="PsiReference_Language_CoreTypes_RegExps_Constructs_Characters">
<title>Символы</title>

<informaltable pgwide="1">
<tgroup cols="2">
<colspec colwidth="1*"/>
<colspec colwidth="3*"/>
<tbody>
<row>
<entry><literal><replaceable>X</replaceable></literal></entry>
<entry>символ <replaceable>X</replaceable></entry>
</row>
<row>
<entry><literal>\\</literal></entry>
<entry>символ бэкслэш, <constant>U+5C</constant></entry>
</row>
<row>
<entry><literal>\u<replaceable>HHHH</replaceable></literal></entry>
<entry>символ <constant>U+<replaceable>HHHH</replaceable></constant></entry>
</row>
<row>
<entry><literal>\x{<replaceable>H…H</replaceable>}</literal></entry>
<entry>символ <constant>U+<replaceable>H…H</replaceable></constant></entry>
</row>
<row>
<entry><literal>\t</literal></entry>
<entry>символ табуляции, <constant>U+9</constant></entry>
</row>
<row>
<entry><literal>\n</literal></entry>
<entry>символ конца строки, <constant>U+A</constant></entry>
</row>
<row>
<entry><literal>\r</literal></entry>
<entry>символ возврата каретки, <constant>U+D</constant></entry>
</row>
<row>
<entry><literal>\f</literal></entry>
<entry>символ конца страницы, <constant>U+C</constant></entry>
</row>
<row>
<entry><literal>\a</literal></entry>
<entry>символ гудка, <constant>U+7</constant></entry>
</row>
<row>
<entry><literal>\e</literal></entry>
<entry>символ escape, <constant>U+1B</constant></entry>
</row>
<row>
<entry><literal>\@</literal></entry>
<entry>символ <literal>@</literal>, <constant>U+40</constant></entry>
</row>
<row>
<entry><literal>\c<replaceable>X</replaceable></literal></entry>
<entry>управляющий символ, соответствующий <replaceable>X</replaceable></entry>
</row>
</tbody>
</tgroup>
</informaltable>

</section>

<section xml:id="PsiReference_Language_CoreTypes_RegExps_Constructs_CharacterClasses">
<title>Символьные классы</title>

<informaltable pgwide="1">
<tgroup cols="2">
<colspec colwidth="1*"/>
<colspec colwidth="3*"/>
<tbody>
<row>
<entry><literal>[abc]</literal></entry>
<entry><literal>a</literal>, <literal>b</literal> или <literal>c</literal></entry>
</row>
<row>
<entry><literal>[^abc]</literal></entry>
<entry>любой символ, кроме <literal>a</literal>, <literal>b</literal> и <literal>c</literal></entry>
</row>
<row>
<entry><literal>[A-Za-z]</literal></entry>
<entry>символы от <literal>A</literal> до <literal>Z</literal> или
от <literal>a</literal> до <literal>z</literal> (включительно)</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</section>

<section xml:id="PsiReference_Language_CoreTypes_RegExps_Constructs_PredefinedCharacterClasses">
<title>Предопределённые символьные классы</title>

<informaltable pgwide="1">
<tgroup cols="2">
<colspec colwidth="1*"/>
<colspec colwidth="3*"/>
<tbody>
<row>
<entry><literal>.</literal></entry>
<entry>любой символ</entry>
</row>
<row>
<entry><literal>\d</literal></entry>
<entry>десятичная цифра, <literal>[0-9]</literal></entry>
</row>
<row>
<entry><literal>\D</literal></entry>
<entry>не десятичная цифра, <literal>[^0-9]</literal></entry>
</row>
<row>
<entry><literal>\s</literal></entry>
<entry>пробельный символ, <literal>[ \t\n\r\f\x{0B}]</literal></entry>
</row>
<row>
<entry><literal>\S</literal></entry>
<entry>непробельный символ, <literal>[^ \t\n\r\f\x{0B}]</literal></entry>
</row>
<row>
<entry><literal>\w</literal></entry>
<entry>словный символ, <literal>[A-Za-z_\d]</literal></entry>
</row>
<row>
<entry><literal>\W</literal></entry>
<entry>не словный символ, <literal>[^A-Za-z_\d]</literal></entry>
</row>
</tbody>
</tgroup>
</informaltable>

</section>

<section xml:id="PsiReference_Language_CoreTypes_RegExps_Constructs_POSIXCharacterClasses">
<title>Символьные классы <acronym>POSIX</acronym></title>

</section>

<section xml:id="PsiReference_Language_CoreTypes_RegExps_Constructs_BoundaryAnchors">
<title>Граничные привязки</title>

<informaltable pgwide="1">
<tgroup cols="2">
<colspec colwidth="1*"/>
<colspec colwidth="3*"/>
<tbody>
<row>
<entry><literal>^</literal></entry>
<entry>начало строки</entry>
</row>
<row>
<entry><literal>$</literal></entry>
<entry>конец строки</entry>
</row>
<row>
<entry><literal>\b</literal></entry>
<entry>граница слова</entry>
</row>
<row>
<entry><literal>\B</literal></entry>
<entry>не граница слова</entry>
</row>
<row>
<entry><literal>\A</literal></entry>
<entry>начало входных данных</entry>
</row>
<row>
<entry><literal>\G</literal></entry>
<entry>конец последнего совпадения</entry>
</row>
<row>
<entry><literal>\Z</literal></entry>
<entry>TODO</entry>
</row>
<row>
<entry><literal>\z</literal></entry>
<entry>TODO</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</section>

</section>

</section>

</section>

