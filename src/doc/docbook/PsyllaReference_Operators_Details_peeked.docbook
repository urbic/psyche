<?xml version="1.0" encoding="UTF-8"?>
<section xml:id="PsyllaReference_Operators_Details_peeked">
<title><token language="psylla">peeked</token></title>

<para>
TODO
</para>

<formalpara>
&TitleSynopsis;
<synopsis>
<replaceable>stream</replaceable>
<replaceable>executable</replaceable>
<token language="psylla">peeked</token>
<replaceable>peekedstream</replaceable>
</synopsis>
</formalpara>

<formalpara>
&TitleOperands;
<itemizedlist>
<listitem>
<replaceable>stream</replaceable>,
<replaceable>peekedstream</replaceable>:
<xref xrefstyle="template:%t" linkend="PsyllaReference_Types_Details_formalstream"/>
</listitem>
<listitem>
<replaceable>executable</replaceable>:
<xref xrefstyle="template:%t" linkend="PsyllaReference_Types_Details_executable"/>
</listitem>
</itemizedlist>
</formalpara>

<formalpara>
&TitleExamples;
<programlisting language="psylla">/a array def 0 1 4 range { dup mul a exch append } peeked { } forall a	▶ 0 1 2 3 4 [0 1 4 8 16]</programlisting>
</formalpara>

<formalpara>
&TitleErrors;
<itemizedlist>
<listitem>
<xref xrefstyle="template:%t" linkend="PsyllaReference_Errors_Details_stackunderflow"/> —
&ErrorReason_stackunderflow;
</listitem>
<listitem>
<xref xrefstyle="template:%t" linkend="PsyllaReference_Errors_Details_typecheck"/> —
&ErrorReason_typecheck;
</listitem>
</itemizedlist>
</formalpara>

<formalpara>
&TitleCategory;
<xref xrefstyle="template:%t" linkend="PsyllaReference_Operators_ByCategory_Containers"/>.
</formalpara>

<formalpara>
&TitleSeeAlso;
<xref xrefstyle="template:%t" linkend="PsyllaReference_Operators_Details_filtered"/>,
<xref xrefstyle="template:%t" linkend="PsyllaReference_Operators_Details_forall"/>,
<xref xrefstyle="template:%t" linkend="PsyllaReference_Operators_Details_limited"/>,
<xref xrefstyle="template:%t" linkend="PsyllaReference_Operators_Details_skipped"/>,
<xref xrefstyle="template:%t" linkend="PsyllaReference_Operators_Details_sorted"/>.
</formalpara>

</section>
