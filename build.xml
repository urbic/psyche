<?xml version="1.0"?>
<project name="psylla" default="jar" basedir=".">
	
	<property name="project.name" value="${ant.project.name}"/>
	<property name="src" location="src"/>
	<property name="src.java" location="${src}/java"/>
	<property name="src.jj" location="${src}/jj"/>
	<property name="src.psi" location="${src}/psi"/>
	<property name="src.docbook" location="${src}/docbook"/>
	<property name="src.ant" location="${src}/ant"/>
	<property name="src.bin" location="${src}/bin"/>
	<property name="src.css" location="${src}/css"/>
	<property name="target" location="target"/>
	<property name="target.src.java" location="${target}/src/java"/>
	<property name="target.doc" location="${target}/doc"/>
	<property name="target.doc.javadoc"  location="${target.doc}/javadoc"/>
	<property name="target.classes" location="${target}/classes"/>
	<property name="target.lib"  location="${target}/lib"/>
	<property name="target.bin"  location="${target}/bin"/>
	<property name="target.obs" value="${target}/obs"/>
	<property name="target.man"  location="${target}/man"/>
	<property name="target.doc.html" location="${target.doc}/html"/>
	<property name="installroot"  location="${target}/installroot"/>
	<property name="test.file"  location="test.psi"/>
	<property name="xslt.highlight.xslthl.config" location="${src.docbook}/xsl/xslthl/highlighters/xslthl-config.xml"/>
	<property name="home.javadoc.java" location="/usr/share/javadoc/java"/>
	<path id="project.classpath">
		<pathelement path="${target.lib}/${project.name}.jar"/>
		<pathelement path="/usr/share/java/jline.jar"/>
	</path>
	<property file="${src.java}/coneforest/psi/Version.properties" prefix="project"/>
	<property
		name="project.version"
		value="${project.version.major}.${project.version.minor}.${project.version.revision}"
		/>
	
	<import file="${src.ant}/htmldocs.ant"/>
	<import file="${src.ant}/manpages.ant"/>
	<import file="${src.ant}/obs.ant"/>
	<import file="${src.ant}/install.ant"/>

	<target name="compile.jj">
		<mkdir dir="${target.src.java}/coneforest/psi"/>
		<javacc
			target="${src.jj}/coneforest/psi/Parser.jj"
			outputdirectory="${target.src.java}/coneforest/psi"
			javacchome="/usr/share/java"
			unicodeinput="true"
			static="false"
			/>
	</target>

	<target name="compile.java" depends="compile.jj"
			description="compile the source">
		<mkdir dir="${target.classes}"/>
		<javac
			srcdir="${src.java}:${target.src.java}"
			destdir="${target.classes}"
			source="1.8"
			target="1.8"
			includeantruntime="false"
			classpathref="project.classpath"
			encoding="UTF-8"
			>
			<!--compilerarg value="-Xlint"/-->
			<!--compilerarg value="-Xdoclint"/-->
			<compilerarg value="-Xdiags:verbose"/>
		</javac>
		<native2ascii
			src="${src.java}"
			encoding="UTF-8"
			dest="${target.classes}"
			includes="**/*.properties"
			ext=".properties"
			/>
	</target>

	<target name="compile" depends="compile.jj,compile.java"/>
	
	<target name="javadoc" depends="compile.jj">
		<javadoc
			sourcepath="${src.java}"
			destdir="${target.doc.javadoc}"
			classpathref="project.classpath"
			access="public"
			encoding="UTF-8"
			charset="UTF-8"
			>
			<arg value="-Xdoclint:missing,reference"/>
			<link href="${home.javadoc.java}"/>
			<link href="http://jline.sourceforge.net/apidocs/"/>
		</javadoc>
		<!--
		<move file="${target.doc.javadoc}/stylesheet.css" tofile="${target.doc.javadoc}/default.scss"/>
		<apply executable="sass" dest="${target.doc.javadoc}" parallel="false">
			<arg value="- -load-path"/>
			<arg value="${target.doc.javadoc}"/>
			<arg value="- -style"/>
			<arg value="compact"/>
			<srcfile/>
			<targetfile/>
			<fileset dir="${src.css}" includes="javadoc.scss"/>
			<mapper type="glob" from="javadoc.scss" to="stylesheet.css"/>
		</apply>
		<delete file="${target.doc.javadoc}/default.scss"/>
		-->
	</target>

	<target name="jar" depends="compile">
		<jar
			jarfile="${target.lib}/${project.name}-${project.version}.jar"
			basedir="${target.classes}"
			>
			<manifest>
				<attribute name="Main-Class" value="coneforest.psi.Psylla"/>
				<!--attribute name="Class-Path" value="/usr/share/java/regexp.jar"/-->
			</manifest>
			<service
				type="javax.script.ScriptEngineFactory"
				provider="coneforest.psi.engine.PsiScriptEngineFactory"
				/>
		</jar>
		<symlink
			resource="${project.name}-${project.version}.jar"
			link="${target.lib}/${project.name}.jar"
			overwrite="true"
			/>
	</target>

	<target name="clean" description="Clean build directory">
		<delete dir="${target}"/>
	</target>

	<target name="test" depends="jar">
		<java
			classname="coneforest.psi.Psylla"
			fork="true"
			classpathref="project.classpath"
			>
			<arg file="${test.file}"/>
		</java>
	</target>

	<target name="htmldocs" description="Make documentation" depends="css">
		<mkdir dir="${target.doc.html}"/>
		<symlink resource="${src.docbook}/examples" link="examples" overwrite="true"/>
		<!--xslt.lang lang="en"/-->
		<xslt.html.lang lang="ru" base.name="PsiReference"/>
		<xslt.html.lang lang="en" base.name="PsiReference"/>
		<copy todir="${target.doc.html}">
			<fileset dir="${src.docbook}" includes="*.png *.svg *.jpeg *.gif *.js"/>
			<fileset dir="${src.docbook}" includes="examples/**" excludes="**/.htaccess"/>
			<fileset dir="${src.docbook}" includes="files/**" excludes="**/.htaccess"/>
			<fileset dir="${src.docbook}" includes="navigation/**"/>
			<fileset dir="${src.docbook}" includes="js/**"/>
		</copy>
		<copy todir="${target.doc.html}" file="${src}/logo/${project.name}-16.png"/>
		<symlink action="delete" link="examples"/>
	</target>
	
	<target name="css" description="Make CSS">
		<mkdir dir="${target.doc.html}"/>
		<dependset>
			<srcfilelist dir="${src.docbook}" files="*.scss"/>
			<targetfileset dir="${target.doc.html}" includes="${project.name}.css"/>
		</dependset>
		<apply executable="sass" dest="${target.doc.html}" parallel="false">
			<arg value="--style"/>
			<arg value="compact"/>
			<!--arg value="-+-load-path"/>
			<arg value="${share.dir}/css"-->
			<srcfile/>
			<targetfile/>
			<fileset dir="${src.docbook}" includes="PsiReference.scss"/>
			<mapper type="glob" from="*.scss" to="*.css"/>
		</apply>
	</target>

	<target name="manpages" description="Make manual pages">
		<copy tofile="${target}/version.ent">
            <string><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!ENTITY psiVersion "${project.version}">
]]></string>
        </copy>
		<mkdir dir="${target.doc}"/>
		<symlink resource="${src.docbook}/examples" link="examples" overwrite="true"/>
		<xslt.manpages.lang lang="en" base.name="PsiManpages"/>
		<symlink action="delete" link="examples"/>
	</target>

	<target name="dist.zip" description="Make Zip distribution">
		<mkdir dir="${target}/tmp/${project.name}-${project.version}"/>
		<copy todir="${target}/tmp/${project.name}-${project.version}">
			<fileset
				dir="."
				includes="src/** build.xml README LICENSE AUTHORS"
				/>
		</copy>
		<zip
			destfile="${target}/${project.name}-${project.version}.zip"
			basedir="${target}/tmp"
			>
			<fileset
				dir="${target}/tmp"
				includes="${project.name}-${project.version}/**"
				/>
		</zip>
		<delete dir="${target}/tmp" quiet="yes"/>
	</target>
	
	<target name="dist.tar" description="Make Tar distribution">
		<mkdir dir="${target}/tmp/${project.name}-${project.version}"/>
		<copy todir="${target}/tmp/${project.name}-${project.version}">
			<fileset
				dir="."
				includes="src/** build.xml README LICENSE AUTHORS"
				/>
		</copy>
		<tar
			destfile="${target}/${project.name}-${project.version}.tar.gz"
			compression="gzip"
			basedir="${target}/tmp"
			>
			<fileset
				dir="${target}/tmp"
				includes="${project.name}-${project.version}/**"
				/>
		</tar>
		<delete dir="${target}/tmp" quiet="yes"/>
	</target>
	
	<target name="build" description="Build project" depends="jar,htmldocs">
		<copy todir="${target.bin}" file="${src.bin}/${project.name}"/>
		<copy todir="${target.doc}">
			<fileset dir="." includes="README LICENSE AUTHORS"/>
			<fileset dir="${src.psi}" includes="examples/*"/>
		</copy>
	</target>

</project>
